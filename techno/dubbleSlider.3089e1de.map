{"version":3,"sources":["assets/JS/dubbleSlider.js"],"names":["dubleSlider","sliderElem","document","querySelector","thumbMin","thumbMax","bar","minPriceInput","maxPriceInput","sliderCoords","getCoords","rangeEnd","offsetWidth","min","parseInt","getComputedStyle","left","max","devider","value","elem","box","getBoundingClientRect","top","pageYOffset","pageXOffset","onmousedown","e","thumbCoords","shiftX","pageX","onmousemove","newLeft","style","marginLeft","width","deltaBar","onmouseup","ondragstart","onchange","preventDefault","leftChange","console","log","rightChange"],"mappings":";AAAA,SAASA,IACDC,IAAAA,EAAaC,SAASC,cAAc,UACpCC,EAAWF,SAASC,cAAc,eAClCE,EAAWH,SAASC,cAAc,eAClCG,EAAMJ,SAASC,cAAc,QAC7BI,EAAgBL,SAASC,cAAc,qBACvCK,EAAgBN,SAASC,cAAc,qBACzCM,EAAeC,EAAUT,GACzBU,EAAWV,EAAWW,YAAcR,EAASQ,YAG7CC,GAFWP,EAAIM,YAETE,SAASC,iBAAiBX,GAAUY,OAC1CC,EAAMH,SAASC,iBAAiBV,GAAUW,MAExCE,EAAUV,EAAcW,MAAQF,EAiE7BP,SAAAA,EAAUU,GACbC,IAAAA,EAAMD,EAAKE,wBAER,MAAA,CACLC,IAAKF,EAAIE,IAAMC,YACfR,KAAMK,EAAIL,KAAOS,aApErBrB,EAASsB,YAAc,SAASC,GAC1BC,IAAAA,EAAclB,EAAUN,GACxByB,EAASF,EAAEG,MAAQF,EAAYZ,KA0B5B,OAxBPd,SAAS6B,YAAc,SAASJ,GAC1BK,IAAAA,EAAUL,EAAEG,MAAQD,EAASpB,EAAaO,KAG1CgB,EAAU,IACZA,EAAU,GAGRA,EAAUf,EAAMb,EAASQ,YAAc,IACzCoB,EAAUf,EAAMb,EAASQ,YAAc,GAGzCC,EAAMmB,EAEN5B,EAAS6B,MAAMjB,KAAOgB,EAAU,KAChC1B,EAAI2B,MAAMC,WAAarB,EAAM,KAC7BP,EAAI2B,MAAME,MAAQC,IAAa,KAC/B7B,EAAcY,MAAQL,SAASI,EAAUL,IAG3CX,SAASmC,UAAY,WACnBnC,SAAS6B,YAAc7B,SAASmC,UAAY,OAGvC,GAGThC,EAASqB,YAAc,SAASC,GAC1BC,IAAAA,EAAclB,EAAUL,GACxBwB,EAASF,EAAEG,MAAQF,EAAYZ,KAuB5B,OArBPd,SAAS6B,YAAc,SAASJ,GAC1BK,IAAAA,EAAUL,EAAEG,MAAQD,EAASpB,EAAaO,KAG1CgB,EAAUnB,EAAMT,EAASQ,YAAc,IACzCoB,EAAUnB,EAAMT,EAASQ,YAAc,GAGrCoB,EAAUrB,IACZqB,EAAUrB,GAEZM,EAAMe,EACN3B,EAAS4B,MAAMjB,KAAOgB,EAAU,KAChC1B,EAAI2B,MAAME,MAAQC,IAAa,KAC/B5B,EAAcW,MAAQL,SAASI,EAAUD,IAG3Cf,SAASmC,UAAY,WACnBnC,SAAS6B,YAAc7B,SAASmC,UAAY,OAGvC,GAGTjC,EAASkC,YAAc,WACd,OAAA,GAYLF,IAAAA,EAAW,WACN1B,OAAAA,EAAUL,GAAUW,KAAON,EAAUN,GAAUY,MAGxDT,EAAcgC,SAAW,SAAAZ,GACvBA,EAAEa,iBACIC,IAAAA,EAAa3B,SAASP,EAAcY,MAAQD,GAClDd,EAAS6B,MAAMjB,KAAOyB,EAAa,KACnCnC,EAAI2B,MAAMC,WAAaO,EAAa,KACpCnC,EAAI2B,MAAME,MAAQC,IAAa,KAC/BM,QAAQC,IAAI,QAASpC,EAAcY,QAGrCX,EAAc+B,SAAW,SAAAZ,GACvBA,EAAEa,iBACII,IAAAA,EAAc9B,SAASN,EAAcW,MAAQD,GACnDb,EAAS4B,MAAMjB,KAAO4B,EAAc,KACpCtC,EAAI2B,MAAME,MAAQC,IAAa,MAInCpC","file":"dubbleSlider.3089e1de.map","sourceRoot":"..\\src","sourcesContent":["function dubleSlider() {\r\n  const sliderElem = document.querySelector(\".scale\");\r\n  const thumbMin = document.querySelector(\".toggle-min\");\r\n  const thumbMax = document.querySelector(\".toggle-max\");\r\n  const bar = document.querySelector(\".bar\");\r\n  const minPriceInput = document.querySelector(\".min_price--input\");\r\n  const maxPriceInput = document.querySelector(\".max_price--input\");\r\n  let sliderCoords = getCoords(sliderElem);\r\n  let rangeEnd = sliderElem.offsetWidth - thumbMin.offsetWidth;\r\n  let barWidth = bar.offsetWidth;\r\n\r\n  let min = parseInt(getComputedStyle(thumbMin).left);\r\n  let max = parseInt(getComputedStyle(thumbMax).left);\r\n\r\n  const devider = maxPriceInput.value / max;\r\n\r\n  thumbMin.onmousedown = function(e) {\r\n    let thumbCoords = getCoords(thumbMin);\r\n    let shiftX = e.pageX - thumbCoords.left;\r\n\r\n    document.onmousemove = function(e) {\r\n      let newLeft = e.pageX - shiftX - sliderCoords.left;\r\n\r\n      //если вне слайдера\r\n      if (newLeft < 0) {\r\n        newLeft = 0;\r\n      }\r\n\r\n      if (newLeft > max - thumbMin.offsetWidth / 2) {\r\n        newLeft = max - thumbMin.offsetWidth / 2;\r\n      }\r\n\r\n      min = newLeft;\r\n\r\n      thumbMin.style.left = newLeft + \"px\";\r\n      bar.style.marginLeft = min + \"px\";\r\n      bar.style.width = deltaBar() + \"px\";\r\n      minPriceInput.value = parseInt(devider * min);\r\n    };\r\n\r\n    document.onmouseup = function() {\r\n      document.onmousemove = document.onmouseup = null;\r\n    };\r\n\r\n    return false;\r\n  };\r\n\r\n  thumbMax.onmousedown = function(e) {\r\n    let thumbCoords = getCoords(thumbMax);\r\n    let shiftX = e.pageX - thumbCoords.left;\r\n\r\n    document.onmousemove = function(e) {\r\n      let newLeft = e.pageX - shiftX - sliderCoords.left;\r\n\r\n      //если вне слайдера\r\n      if (newLeft < min + thumbMin.offsetWidth / 2) {\r\n        newLeft = min + thumbMin.offsetWidth / 2;\r\n      }\r\n\r\n      if (newLeft > rangeEnd) {\r\n        newLeft = rangeEnd;\r\n      }\r\n      max = newLeft;\r\n      thumbMax.style.left = newLeft + \"px\";\r\n      bar.style.width = deltaBar() + \"px\";\r\n      maxPriceInput.value = parseInt(devider * max);\r\n    };\r\n\r\n    document.onmouseup = function() {\r\n      document.onmousemove = document.onmouseup = null;\r\n    };\r\n\r\n    return false;\r\n  };\r\n\r\n  thumbMin.ondragstart = function() {\r\n    return false;\r\n  };\r\n\r\n  function getCoords(elem) {\r\n    let box = elem.getBoundingClientRect();\r\n\r\n    return {\r\n      top: box.top + pageYOffset,\r\n      left: box.left + pageXOffset\r\n    };\r\n  }\r\n\r\n  let deltaBar = () => {\r\n    return getCoords(thumbMax).left - getCoords(thumbMin).left;\r\n  };\r\n\r\n  minPriceInput.onchange = e => {\r\n    e.preventDefault();\r\n    const leftChange = parseInt(minPriceInput.value / devider);\r\n    thumbMin.style.left = leftChange + \"px\";\r\n    bar.style.marginLeft = leftChange + \"px\";\r\n    bar.style.width = deltaBar() + \"px\";\r\n    console.log(\"value\", minPriceInput.value);\r\n  };\r\n\r\n  maxPriceInput.onchange = e => {\r\n    e.preventDefault();\r\n    const rightChange = parseInt(maxPriceInput.value / devider);\r\n    thumbMax.style.left = rightChange + \"px\";\r\n    bar.style.width = deltaBar() + \"px\";\r\n  };\r\n}\r\n\r\ndubleSlider();\r\n"]}